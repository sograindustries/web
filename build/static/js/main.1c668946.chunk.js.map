{"version":3,"sources":["store/session/reducers.tsx","store/index.tsx","store/session/actions.tsx","api/services/auth.ts","api/hoc.tsx","api/index.ts","components/LoginPage.tsx","components/SignupPage.tsx","components/MainPage.tsx","components/PatchGrid.tsx","components/PatchesPage.tsx","components/AppBar.tsx","components/PatientsPage.tsx","components/AppRouter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["reducer","combineReducers","isAuthenticated","state","type","jwt","action","payload","rootReducer","session","login","username","password","api","dispatch","a","auth","response","logout","signOut","console","error","signup","userPool","AmazonCognitoIdentity","UserPoolId","ClientId","Promise","res","rej","authenticationData","Username","Password","authenticationDetails","Pool","authenticateUser","onSuccess","result","getIdToken","getJwtToken","onFailure","err","signUp","Name","Value","user","Error","getCurrentUser","cognitoUser","getSession","log","isValid","accessToken","withApi","Component","this","props","React","withRouter","connect","undefined","ownProps","onSingupClick","history","push","ROUTE_SIGNUP","onSubmitClick","code","classes","useStyles","useState","setUsername","setPassword","errorMessage","setErrorMessage","Container","component","maxWidth","CssBaseline","className","paper","Avatar","avatar","Typography","variant","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","e","target","value","errorText","Button","color","submit","onClick","errors","length","join","Grid","container","item","Link","href","makeStyles","theme","body","backgroundColor","palette","common","white","marginTop","spacing","display","flexDirection","alignItems","secondary","main","form","width","message","setRepeatPassword","MainPage","createStyles","root","flexGrow","padding","text","primary","PatchGrid","FormRow","items","Fragment","map","xs","key","uuid","Paper","style","batteryPct","toFixed","sampleCount","moment","unix","lastUploadEpoch","fromNow","rows","list","patchList","i","slice","Math","min","row","patches","setPatches","fetch","method","headers","Authorization","then","json","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","justifyContent","mixins","content","title","onLogoutClick","onPatientsMenuClick","ROUTE_PATIENTS","onPatchesMenuClick","ROUTE_PATCHES","onHomeMenuClick","ROUTE_HOME","children","useTheme","open","setOpen","anchorEl","setAnchorEl","accMenuOpen","Boolean","position","clsx","Toolbar","IconButton","aria-label","edge","aria-controls","aria-haspopup","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Drawer","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","PatientsPage","withPath","route","ROUTE_LOGIN","AppRouter","path","PrivateRoute","attemptAuthFromStorage","rest","hasAttemptedAuth","setHasAttemptedAuth","useEffect","finally","render","location","to","pathname","from","store","createStore","applyMiddleware","thunk","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c668946.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\nimport { SessionAction } from \"./actions\";\n\nfunction jwt(state: string | null = null, action: SessionAction) {\n  switch (action.type) {\n    case \"ACTION_LOGIN_SUCCESS\":\n      return action.payload.jwt;\n    case \"ACTION_LOGIN_START\":\n      return null;\n    case \"ACTION_LOGIN_FAILED\":\n      return null;\n    default:\n      return state;\n  }\n}\n\nfunction isAuthenticated(state: boolean = false, action: SessionAction) {\n  switch (action.type) {\n    case \"ACTION_LOGIN_FAILED\":\n    case \"ACTION_LOGOUT_SUCCESS\":\n      return false;\n    case \"ACTION_LOGIN_SUCCESS\":\n      return true;\n    default:\n      return state;\n  }\n}\n\nexport const reducer = combineReducers({\n  isAuthenticated,\n  jwt\n});\n","import { combineReducers, Dispatch, MiddlewareAPI, AnyAction } from \"redux\";\nimport { SessionAction } from \"./session/actions\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { DeepReadonly } from \"utility-types\";\nimport { reducer as session } from \"./session/reducers\";\n\nexport const rootReducer = combineReducers({\n  session\n});\n\ntype AppAction = SessionAction;\nexport type AppState = DeepReadonly<ReturnType<typeof rootReducer>>;\nexport type AppDispatch = ThunkDispatch<AppState, any, any>;\nexport type AppMiddleware = (\n  api: MiddlewareAPI<Dispatch, AppState>\n) => (next: AppDispatch) => (action: AppAction) => any;\nexport type AppThunk<R, Action extends AnyAction> = ThunkAction<\n  R,\n  AppState,\n  {},\n  Action\n>;\n","import { action } from \"typesafe-actions\";\nimport { AppThunk } from \"..\";\nimport { Api } from \"../../api\";\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\n\nexport function loginStart() {\n  return action(\"ACTION_LOGIN_START\");\n}\n\nexport function loginSuccess(username: string, jwt: string) {\n  return action(\"ACTION_LOGIN_SUCCESS\", { username, jwt });\n}\n\nexport function loginFailed(error: string) {\n  return action(\"ACTION_LOGIN_FAILED\", error);\n}\n\nexport function logoutSuccess() {\n  return action(\"ACTION_LOGOUT_SUCCESS\");\n}\n\nexport function login(\n  username: string,\n  password: string,\n  api: Api\n): AppThunk<Promise<string>, SessionAction> {\n  return async dispatch => {\n    try {\n      const response = await api.auth.login(username, password);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n\nexport function logout(api: Api): AppThunk<void, SessionAction> {\n  return async dispatch => {\n    try {\n      await api.auth.signOut();\n      dispatch(logoutSuccess());\n    } catch (error) {\n      console.error(\"Signout error: \", error);\n      throw error;\n    }\n  };\n}\n\nexport function signup(\n  username: string,\n  password: string,\n  api: Api\n): AppThunk<Promise<CognitoUser>, SessionAction> {\n  return async dispatch => {\n    try {\n      const response = await api.auth.signup(username, password);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n\nexport type SessionAction = ReturnType<\n  | typeof loginStart\n  | typeof loginSuccess\n  | typeof loginFailed\n  | typeof logoutSuccess\n>;\n","import * as AmazonCognitoIdentity from \"amazon-cognito-identity-js\";\n\nvar poolData = {\n  UserPoolId: \"us-east-1_9vsr32SCz\", // your user pool id here\n  ClientId: \"1hojv8fbr0nkft2p2tbvgksi46\" // your app client id here\n};\nvar userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData);\n\nexport const makeAuthService = () => {\n  return {\n    login: async (username: string, password: string) => {\n      return new Promise<string>((res, rej) => {\n        var authenticationData = {\n          Username: username,\n          Password: password\n        };\n        var authenticationDetails = new AmazonCognitoIdentity.AuthenticationDetails(\n          authenticationData\n        );\n\n        var cognitoUser = new AmazonCognitoIdentity.CognitoUser({\n          Username: username,\n          Pool: userPool\n        });\n\n        cognitoUser.authenticateUser(authenticationDetails, {\n          onSuccess: function(result) {\n            res(result.getIdToken().getJwtToken());\n          },\n\n          onFailure: function(err) {\n            rej(err);\n          }\n        });\n      });\n    },\n    signup: async (username: string, password: string) => {\n      return new Promise<AmazonCognitoIdentity.CognitoUser>((res, rej) => {\n        userPool.signUp(\n          username,\n          password,\n          [\n            new AmazonCognitoIdentity.CognitoUserAttribute({\n              Name: \"email\",\n              Value: username\n            })\n          ],\n          [],\n          function(err, result) {\n            if (err) {\n              rej(err);\n              return;\n            }\n\n            if (!result) {\n              rej(new Error(\"No result available.\"));\n              return;\n            }\n\n            res(result.user);\n          }\n        );\n      });\n    },\n\n    getCurrentUser: () => {\n      return new Promise<{ username: string; jwt: string } | null>(\n        (res, rej) => {\n          var cognitoUser = userPool.getCurrentUser();\n\n          if (!cognitoUser) {\n            res(null);\n            return;\n          }\n\n          cognitoUser.getSession((err: any, session: any) => {\n            if (err) {\n              rej(err);\n              return;\n            }\n\n            console.log(\"session validity: \" + session.isValid());\n            console.log(\"SESSION: \", session);\n            const accessToken = session.getIdToken();\n            res({\n              jwt: accessToken.getJwtToken(),\n              username: accessToken[\"payload\"][\"username\"]\n            });\n\n            /*\n            AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n              IdentityPoolId: \"...\", // your identity pool id here\n              Logins: {\n                // Change the key below according to the specific region your user pool is in.\n                [`cognito-idp.us-east-2.amazonaws.com/${poolData.UserPoolId}`]: session\n                  .getIdToken()\n                  .getJwtToken()\n              }\n            });\n            */\n\n            // Instantiate aws sdk service objects now that the credentials have been updated.\n            // example: var s3 = new AWS.S3();\n          });\n        }\n      );\n    },\n\n    signOut: () => {\n      return new Promise((res, rej) => {\n        var cognitoUser = userPool.getCurrentUser();\n\n        if (cognitoUser) {\n          cognitoUser.signOut();\n          res();\n        } else {\n          rej(new Error(\"User is not available.\"));\n        }\n      });\n    }\n  };\n};\n","import * as React from \"react\";\nimport { Api, createApi } from \".\";\n\nexport interface WithApiProps {\n  api: Api;\n}\n\nconst api = createApi();\n\nexport const withApi = <P extends {}>(\n  Component: React.ComponentType<P & WithApiProps>\n) =>\n  class WithApi extends React.Component<P, {}> {\n    render() {\n      return <Component {...this.props} api={api} />;\n    }\n  };\n","import { makeAuthService } from \"./services/auth\";\n\nexport const createApi = () => ({\n  auth: makeAuthService()\n});\n\nexport type Api = ReturnType<typeof createApi>;\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { connect, MapDispatchToPropsParam } from \"react-redux\";\nimport { login } from \"../store/session/actions\";\nimport { withRouter, RouteComponentProps } from \"react-router\";\nimport { AppDispatch } from \"../store\";\nimport { WithApiProps, withApi } from \"../api/hoc\";\nimport { ROUTE_SIGNUP } from \"./AppRouter\";\n\ntype LoginError = \"UserNotFoundException\";\n\ninterface Props {\n  onSubmitClick: (username: string, password: string) => Promise<LoginError[]>;\n  onSingupClick: () => void;\n}\n\nfunction LoginPage(props: Props) {\n  const classes = useStyles();\n  const [username, setUsername] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [errorMessage, setErrorMessage] = React.useState<string | null>(null);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          autoFocus\n          onChange={e => {\n            setUsername(e.target.value);\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          onChange={e => {\n            setPassword(e.target.value);\n          }}\n        />\n\n        {errorMessage && <h4 className={classes.errorText}>{errorMessage}</h4>}\n\n        <Button\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={async () => {\n            const errors = await props.onSubmitClick(username, password);\n            if (errors.length > 0) {\n              setErrorMessage(errors.join(\", \"));\n            } else {\n              setErrorMessage(null);\n            }\n          }}\n        >\n          Sign In\n        </Button>\n        <Grid container>\n          <Grid item>\n            <Link href=\"#\" variant=\"body2\" onClick={props.onSingupClick}>\n              {\"Don't have an account? Sign Up\"}\n            </Link>\n          </Grid>\n        </Grid>\n      </div>\n    </Container>\n  );\n}\n\nconst mapDispatchToProps: MapDispatchToPropsParam<\n  Props,\n  RouteComponentProps & WithApiProps\n> = (dispatch: AppDispatch, ownProps) => {\n  return {\n    onSingupClick: () => {\n      ownProps.history.push(ROUTE_SIGNUP);\n    },\n    onSubmitClick: async (username: string, password: string) => {\n      try {\n        const response = await dispatch(\n          login(username, password, ownProps.api)\n        );\n        console.log(\"RESPONSE: \", response);\n        ownProps.history.push(\"protected\");\n        return []; // no errors\n      } catch (error) {\n        return [error.code as LoginError];\n      }\n    }\n  };\n};\n\nexport default withApi(\n  withRouter(\n    connect(\n      undefined,\n      mapDispatchToProps\n    )(LoginPage)\n  )\n);\n\nconst useStyles = makeStyles(theme => ({\n  \"@global\": {\n    body: {\n      backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  errorText: {\n    color: \"red\"\n  }\n}));\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { connect, MapDispatchToPropsParam } from \"react-redux\";\nimport { login, signup } from \"../store/session/actions\";\nimport { withRouter, RouteComponentProps } from \"react-router\";\nimport { AppDispatch } from \"../store\";\nimport { WithApiProps, withApi } from \"../api/hoc\";\n\ntype SignupErrorMessage = string;\n\ninterface Props {\n  onSubmitClick: (\n    username: string,\n    password: string\n  ) => Promise<SignupErrorMessage[]>;\n}\n\nfunction SignupPage(props: Props) {\n  const classes = useStyles();\n  const [username, setUsername] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [repeatPassword, setRepeatPassword] = React.useState(\"\");\n  const [errorMessage, setErrorMessage] = React.useState<string | null>(null);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          autoFocus\n          onChange={e => {\n            setUsername(e.target.value);\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          onChange={e => {\n            setPassword(e.target.value);\n          }}\n        />\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"repeat-password\"\n          label=\"Repeat Password\"\n          type=\"password\"\n          id=\"repeat-password\"\n          onChange={e => {\n            setRepeatPassword(e.target.value);\n          }}\n        />\n\n        {errorMessage && <h4 className={classes.errorText}>{errorMessage}</h4>}\n\n        <Button\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={async () => {\n            const errors = await props.onSubmitClick(username, password);\n            if (errors.length > 0) {\n              setErrorMessage(errors.join(\", \"));\n            }\n          }}\n        >\n          Sign In\n        </Button>\n        <Grid container>\n          <Grid item>\n            <Link href=\"#\" variant=\"body2\">\n              {\"Don't have an account? Sign Up\"}\n            </Link>\n          </Grid>\n        </Grid>\n      </div>\n    </Container>\n  );\n}\n\nconst mapDispatchToProps: MapDispatchToPropsParam<\n  Props,\n  RouteComponentProps & WithApiProps\n> = (dispatch: AppDispatch, ownProps) => {\n  return {\n    onSubmitClick: async (username: string, password: string) => {\n      try {\n        const response = await dispatch(\n          signup(username, password, ownProps.api)\n        );\n\n        console.log(response);\n\n        const loginResponse = await dispatch(\n          login(username, password, ownProps.api)\n        );\n\n        ownProps.history.push(\"protected\");\n        return []; // no errors\n      } catch (error) {\n        console.log(error);\n        return [error.message as SignupErrorMessage];\n      }\n    }\n  };\n};\n\nexport default withApi(\n  withRouter(\n    connect(\n      undefined,\n      mapDispatchToProps\n    )(SignupPage)\n  )\n);\n\nconst useStyles = makeStyles(theme => ({\n  \"@global\": {\n    body: {\n      backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  errorText: {\n    color: \"red\"\n  }\n}));\n","import * as React from \"react\";\n\nfunction MainPage() {\n  return <div>main</div>;\n}\n\nexport default MainPage;\n","import React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport BatteryIcon from \"@material-ui/icons/BatteryFull\";\n\ninterface Patch {\n  name: string;\n  uuid: string;\n  batteryPct: number;\n  lastUploadEpoch: number;\n  sampleCount: number;\n}\n\ninterface Props {\n  patchList: Patch[];\n}\n\nfunction PatchGrid(props: Props) {\n  const classes = useStyles({});\n\n  function FormRow({ items }: { items: Patch[] }) {\n    return (\n      <React.Fragment>\n        {items.map(item => {\n          return (\n            <Grid item xs={4} key={item.uuid}>\n              <Paper className={classes.paper}>\n                <div style={{ display: \"flex\" }}>\n                  <Typography\n                    variant=\"h5\"\n                    component=\"h3\"\n                    style={{ flexGrow: 1 }}\n                  >\n                    {item.name}\n                  </Typography>\n                  <div style={{ display: \"flex\" }}>\n                    <BatteryIcon\n                      style={{ color: item.batteryPct > 0.2 ? \"green\" : \"red\" }}\n                    />\n                    <Typography>\n                      {(item.batteryPct * 100).toFixed(0)}%\n                    </Typography>\n                  </div>\n                </div>\n\n                <Typography variant=\"subtitle1\" style={{ color: \"gray\" }}>\n                  {item.uuid}\n                </Typography>\n\n                <Typography>\n                  {\"Sample Count: \" + (item.sampleCount || 0)}\n                </Typography>\n\n                <Typography>\n                  {\"Last uploaded \" +\n                    moment.unix(item.lastUploadEpoch).fromNow()}\n                </Typography>\n              </Paper>\n            </Grid>\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n\n  const rows = [];\n\n  const list = [...props.patchList];\n  for (let i = 0; i < list.length; i += 3) {\n    rows.push(list.slice(i, Math.min(list.length, i + 3)));\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        {rows.map(row => {\n          return (\n            <Grid\n              container\n              item\n              xs={12}\n              spacing={3}\n              key={row.map(uuid => uuid).join(\"-\")}\n            >\n              <FormRow items={row} />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(1),\n      color: theme.palette.text.primary\n    }\n  })\n);\n\nexport default PatchGrid;\n","import * as React from \"react\";\nimport PatchGrid from \"./PatchGrid\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../store\";\n\nfunction PatchesPage(props: { jwt: string | null }) {\n  const [patches, setPatches] = React.useState<\n    {\n      name: string;\n      uuid: string;\n      batteryPct: number;\n      lastUploadEpoch: number;\n      sampleCount: number;\n    }[]\n  >([]);\n\n  React.useEffect(() => {\n    if (props.jwt) {\n      fetch(\n        \"https://5r2zhe6294.execute-api.us-east-1.amazonaws.com/production/patches\",\n        {\n          //  mode: \"no-cors\",\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: props.jwt\n            //   \"Access-Control-Allow-Origin\": \"*\"\n          }\n        }\n      )\n        .then(res => res.json())\n        .then(setPatches);\n    }\n  }, []);\n\n  return (\n    <div>\n      <PatchGrid patchList={patches} />\n    </div>\n  );\n}\n\nexport default connect((state: AppState) => {\n  return {\n    jwt: state.session.jwt\n  };\n})(PatchesPage);\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport {\n  createStyles,\n  makeStyles,\n  useTheme,\n  Theme\n} from \"@material-ui/core/styles\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport MaterialAppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MemoryIcon from \"@material-ui/icons/Memory\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../store/session/actions\";\nimport { WithApiProps, withApi } from \"../api/hoc\";\nimport { AppDispatch } from \"../store\";\nimport { MenuItem, Menu } from \"@material-ui/core\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport { ROUTE_PATCHES, ROUTE_HOME, ROUTE_PATIENTS } from \"./AppRouter\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\"\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    menuButton: {\n      marginRight: 36\n    },\n    hide: {\n      display: \"none\"\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: \"nowrap\"\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    drawerClose: {\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      overflowX: \"hidden\",\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9) + 1\n      }\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3)\n    },\n    title: {\n      flexGrow: 1\n    }\n  })\n);\n\ninterface Props {\n  onLogoutClick: () => void;\n  onHomeMenuClick: () => void;\n  onPatientsMenuClick: () => void;\n  onPatchesMenuClick: () => void;\n  children?: any;\n}\n\nfunction AppBar({\n  onLogoutClick,\n  onHomeMenuClick,\n  onPatientsMenuClick,\n  onPatchesMenuClick,\n\n  children\n}: Props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const accMenuOpen = Boolean(anchorEl);\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <MaterialAppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            ARGOS\n          </Typography>\n\n          <div>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\"\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\"\n              }}\n              open={accMenuOpen}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={onLogoutClick}>Logout</MenuItem>\n            </Menu>\n          </div>\n        </Toolbar>\n      </MaterialAppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open\n          })\n        }}\n        open={open}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon />\n            ) : (\n              <ChevronLeftIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button key={\"home\"} onClick={onHomeMenuClick}>\n            <ListItemIcon>\n              <HomeIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Home\"} />\n          </ListItem>\n          <ListItem button key={\"patient_list\"} onClick={onPatientsMenuClick}>\n            <ListItemIcon>\n              <AssignmentIndIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Patients\"} />\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem button key={\"patches\"} onClick={onPatchesMenuClick}>\n            <ListItemIcon>\n              <MemoryIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Patches\"} />\n          </ListItem>\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n      </main>\n    </div>\n  );\n}\n\nexport default withRouter(\n  withApi(\n    connect(\n      undefined,\n      (\n        dispatch: AppDispatch,\n        { api, history }: WithApiProps & RouteComponentProps\n      ) => {\n        return {\n          onLogoutClick: async () => {\n            dispatch(logout(api));\n          },\n          onPatientsMenuClick: () => {\n            history.push(ROUTE_PATIENTS);\n          },\n          onPatchesMenuClick: () => {\n            history.push(ROUTE_PATCHES);\n          },\n          onHomeMenuClick: () => {\n            history.push(ROUTE_HOME);\n          }\n        };\n      }\n    )(AppBar)\n  )\n);\n","import * as React from \"react\";\n\nfunction PatientsPage() {\n  return <div>Patients</div>;\n}\n\nexport default PatientsPage;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { AppState, AppDispatch } from \"../store\";\nimport LoginPage from \"./LoginPage\";\nimport SignupPage from \"./SignupPage\";\nimport { withApi, WithApiProps } from \"../api/hoc\";\nimport { loginSuccess } from \"../store/session/actions\";\nimport MainPage from \"./MainPage\";\nimport PatchesPage from \"./PatchesPage\";\nimport AppBar from \"./AppBar\";\nimport PatientsPage from \"./PatientsPage\";\n\nconst withPath = (route: string) => `/${route}`;\n\nexport const ROUTE_HOME = \"\";\nexport const ROUTE_SIGNUP = \"signup\";\nexport const ROUTE_PATIENTS = \"patients\";\nexport const ROUTE_PATCHES = \"patches\";\nexport const ROUTE_LOGIN = \"login\";\n\nexport function AppRouter() {\n  return (\n    <Router>\n      <Switch>\n        <Route path={withPath(ROUTE_SIGNUP)}>\n          <SignupPage />\n        </Route>\n        <Route path={withPath(ROUTE_LOGIN)}>\n          <LoginPage />\n        </Route>\n        <PrivateRoute path={withPath(ROUTE_PATCHES)}>\n          <PatchesPage />\n        </PrivateRoute>\n        <PrivateRoute path={withPath(ROUTE_PATIENTS)}>\n          <PatientsPage />\n        </PrivateRoute>\n        <PrivateRoute path={withPath(ROUTE_HOME)}>\n          <MainPage />\n        </PrivateRoute>\n      </Switch>\n    </Router>\n  );\n}\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRouteHelper({\n  children,\n  isAuthenticated,\n  attemptAuthFromStorage,\n  ...rest\n}: any) {\n  const [hasAttemptedAuth, setHasAttemptedAuth] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!isAuthenticated) {\n      attemptAuthFromStorage().finally(() => {\n        setHasAttemptedAuth(true);\n      });\n    }\n  }, [isAuthenticated, attemptAuthFromStorage]);\n\n  if (!hasAttemptedAuth && !isAuthenticated) {\n    return <div>Loading....</div>;\n  }\n\n  return (\n    <AppBar>\n      <Route\n        {...rest}\n        render={({ location }) =>\n          isAuthenticated ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n        }\n      />\n    </AppBar>\n  );\n}\n\nconst PrivateRoute = withApi(\n  connect(\n    (state: AppState) => {\n      return {\n        isAuthenticated: state.session.isAuthenticated\n      };\n    },\n    (dispatch: AppDispatch, ownProps: WithApiProps) => {\n      return {\n        attemptAuthFromStorage: async () => {\n          const user = await ownProps.api.auth.getCurrentUser();\n          if (user) {\n            dispatch(loginSuccess(user.username, user.jwt));\n          }\n        }\n      };\n    }\n  )(PrivateRouteHelper)\n);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"./store\";\nimport thunk from \"redux-thunk\";\nimport { AppRouter } from \"./components/AppRouter\";\n\nconst store = createStore(rootReducer, undefined, applyMiddleware(thunk));\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n}\n\nconst fakeAuth = {\n  isAuthenticated: false,\n  authenticate(cb: any) {\n    fakeAuth.isAuthenticated = true;\n    setTimeout(cb, 100); // fake async\n  },\n  signout(cb: any) {\n    fakeAuth.isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}